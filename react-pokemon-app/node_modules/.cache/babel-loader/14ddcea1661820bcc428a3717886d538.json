{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\tuto_react\\\\react-pokemon-app\\\\src\\\\components\\\\pokemon-card.tsx\";\nimport React, { useState } from 'react';\nimport './pokemon-card.css';\n\n// valeur par défaut \nconst PokemonCard = ({\n  pokemon,\n  bordelColor = \"#009668\"\n}) => {\n  const [color, setColor] = useState();\n\n  const formatType = type => {\n    let color;\n\n    switch (type) {\n      case 'Feu':\n        color = 'red lighten-1';\n        break;\n\n      case 'Eau':\n        color = 'blue lighten-1';\n        break;\n\n      case 'Plante':\n        color = 'green lighten-1';\n        break;\n\n      case 'Insecte':\n        color = 'brown lighten-1';\n        break;\n\n      case 'Normal':\n        color = 'grey lighten-3';\n        break;\n\n      case 'Vol':\n        color = 'blue lighten-3';\n        break;\n\n      case 'Poison':\n        color = 'deep-purple accent-1';\n        break;\n\n      case 'Fée':\n        color = 'pink lighten-4';\n        break;\n\n      case 'Psy':\n        color = 'deep-purple darken-2';\n        break;\n\n      case 'Electrik':\n        color = 'lime accent-1';\n        break;\n\n      case 'Combat':\n        color = 'deep-orange';\n        break;\n\n      default:\n        color = 'grey';\n        break;\n    }\n\n    return `chip ${color}`; // les couleurs et chip viennet de materialize\n  };\n\n  const showBorderColor = () => {\n    setColor(bordelColor);\n  };\n\n  const SelectBorderColor = () => {\n    setColor(\"red\");\n  };\n\n  const HideBorderColor = () => {\n    setColor(\"#f5f5f5\");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"col s6 m4\",\n    onClick: SelectBorderColor,\n    onMouseEnter: showBorderColor,\n    onMouseLeave: HideBorderColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card horizontal\",\n    style: {\n      borderColor: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: pokemon.picture,\n    alt: pokemon.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"card-stacked\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, pokemon.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, formatDate(pokemon.created))), pokemon.types.map(type => React.createElement(\"span\", {\n    key: type,\n    className: formatType(type),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, type))))));\n};\n\nexport default PokemonCard;","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/tuto_react/react-pokemon-app/src/components/pokemon-card.tsx"],"names":["React","useState","PokemonCard","pokemon","bordelColor","color","setColor","formatType","type","showBorderColor","SelectBorderColor","HideBorderColor","borderColor","picture","name","formatDate","created","types","map"],"mappings":"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","sourcesContent":["import React,{FunctionComponent, useState} from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport './pokemon-card.css';\r\n\r\ntype Props = {\r\n    pokemon: Pokemon,\r\n    bordelColor?: string\r\n};\r\n                                                        // valeur par défaut \r\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, bordelColor = \"#009668\"}) => {\r\n\r\n    const [color, setColor] = useState<string>();\r\n    \r\n\r\n    const formatType = (type: string): string => {\r\n    let color: string;\r\n \r\n  switch (type) {\r\n    case 'Feu': \r\n      color = 'red lighten-1'; \r\n      break; \r\n    case 'Eau': \r\n      color = 'blue lighten-1'; \r\n      break; \r\n    case 'Plante': \r\n      color = 'green lighten-1'; \r\n      break; \r\n    case 'Insecte': \r\n      color = 'brown lighten-1'; \r\n      break; \r\n    case 'Normal': \r\n      color = 'grey lighten-3'; \r\n      break; \r\n    case 'Vol': \r\n      color = 'blue lighten-3'; \r\n      break; \r\n    case 'Poison': \r\n      color = 'deep-purple accent-1'; \r\n      break; \r\n    case 'Fée': \r\n      color = 'pink lighten-4'; \r\n      break; \r\n    case 'Psy': \r\n      color = 'deep-purple darken-2'; \r\n      break; \r\n    case 'Electrik': \r\n      color = 'lime accent-1'; \r\n      break; \r\n    case 'Combat': \r\n      color = 'deep-orange'; \r\n      break; \r\n    default: \r\n      color = 'grey'; \r\n      break; \r\n  }\r\n \r\n  return `chip ${color}`; // les couleurs et chip viennet de materialize\r\n}\r\n    const showBorderColor = () => {\r\n      setColor(bordelColor);\r\n    };\r\n\r\n    const SelectBorderColor = () => {\r\n      setColor(\"red\");\r\n    };\r\n\r\n    const HideBorderColor = () => {\r\n      setColor(\"#f5f5f5\");\r\n    };\r\n\r\n  \r\n\r\n    return (\r\n        <div className=\"col s6 m4\" onClick={SelectBorderColor } onMouseEnter={showBorderColor}  onMouseLeave={HideBorderColor}>\r\n          <div className=\"card horizontal\" style={{borderColor: color}}>\r\n\r\n            <div className=\"card-image\"> \r\n              <img src={pokemon.picture} alt={pokemon.name}/>\r\n            </div>\r\n\r\n            <div className=\"card-stacked\">\r\n\r\n              <div className=\"card-content\">\r\n\r\n                <p>{pokemon.name}</p>\r\n                <p><small>{formatDate(pokemon.created)}</small></p>\r\n                {pokemon.types.map(type => (\r\n                  <span key={type} className={formatType(type)}>{type}</span>\r\n                ))}\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div> \r\n        </div>\r\n      );\r\n};\r\n\r\nexport default PokemonCard;"]},"metadata":{},"sourceType":"module"}
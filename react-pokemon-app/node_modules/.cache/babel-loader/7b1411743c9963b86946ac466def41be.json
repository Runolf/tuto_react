{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\tuto_react\\\\react-pokemon-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\tuto_react\\\\react-pokemon-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import POKEMONS from\"../models/mock-pokemon\";var PokemonService=/*#__PURE__*/function(){function PokemonService(){_classCallCheck(this,PokemonService);}_createClass(PokemonService,null,[{key:\"getPokemons\",value:function getPokemons(){var _this=this;if(this.isDev){return fetch('http://localhost:3001/pokemons').then(function(response){return response.json();}).catch(function(error){return _this.handleError(error);});}return new Promise(function(resolve){resolve(_this.pokemons);});}},{key:\"getPokemon\",value:function getPokemon(id){var _this2=this;if(this.isDev){return fetch(\"http://localhost:3001/pokemons/\".concat(id)).then(function(response){return response.json();}).then(function(data){return _this2.isEmpty(data)?null:data;}).catch(function(error){return _this2.handleError(error);});}return new Promise(function(resolve){resolve(_this2.pokemons.find(function(pokemon){return id===pokemon.id;}));});}},{key:\"updatePokemon\",value:function updatePokemon(pokemon){var _this3=this;if(this.isDev){return fetch(\"http://localhost:3001/pokemons/\".concat(pokemon.id),{method:'PUT',body:JSON.stringify(pokemon),headers:{'Content-Type':'application/json'}}).then(function(response){return response.json();}).catch(function(error){return _this3.handleError(error);});}return new Promise(function(resolve){var id=pokemon.id;var index=_this3.pokemons.findIndex(function(pokemon){return pokemon.id===id;});_this3.pokemons[index]=pokemon;resolve(pokemon);});}},{key:\"deletePokemon\",value:function deletePokemon(pokemon){var _this4=this;if(this.isDev){return fetch(\"http://localhost:3001/pokemons/\".concat(pokemon.id),{method:'DELETE',headers:{'Content-Type':'application/json'}}).then(function(response){return response.json();}).catch(function(error){return _this4.handleError(error);});}return new Promise(function(resolve){var id=pokemon.id;_this4.pokemons=_this4.pokemons.filter(function(pokemon){return pokemon.id!==id;});resolve({});});}},{key:\"addPokemon\",value:function addPokemon(pokemon){var _this5=this;pokemon.created=new Date(pokemon.created);if(this.isDev){return fetch(\"http://localhost:3001/pokemons\",{method:'POST',body:JSON.stringify(pokemon),headers:{'Content-Type':'application/json'}}).then(function(response){return response.json();}).catch(function(error){return _this5.handleError(error);});}return new Promise(function(resolve){_this5.pokemons.push(pokemon);resolve(pokemon);});}},{key:\"searchPokemon\",value:function searchPokemon(term){var _this6=this;if(this.isDev){return fetch(\"http://localhost:3001/pokemons?q=\".concat(term)).then(function(response){return response.json();}).catch(function(error){return _this6.handleError(error);});}return new Promise(function(resolve){var results=_this6.pokemons.filter(function(pokemon){return pokemon.name.includes(term);});resolve(results);});}},{key:\"isEmpty\",value:function isEmpty(data){return Object.keys(data).length===0;}},{key:\"handleError\",value:function handleError(error){console.error(error);}}]);return PokemonService;}();PokemonService.pokemons=POKEMONS;PokemonService.isDev=!process.env.NODE_ENV||process.env.NODE_ENV==='development';export{PokemonService as default};","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/tuto_react/react-pokemon-app/src/services/pokemon-services.ts"],"names":["POKEMONS","PokemonService","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","id","data","isEmpty","find","pokemon","method","body","JSON","stringify","headers","index","findIndex","filter","created","Date","push","term","results","name","includes","Object","keys","length","console","process","env","NODE_ENV"],"mappings":"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","sourcesContent":["import Pokemon from \"../models/pokemon\";\r\nimport POKEMONS from \"../models/mock-pokemon\";\r\n  \r\nexport default class PokemonService {\r\n  \r\n  static pokemons:Pokemon[] = POKEMONS;\r\n  \r\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\r\n  \r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch('http://localhost:3001/pokemons')\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      resolve(this.pokemons);\r\n    });\r\n  }\r\n  \r\n  static getPokemon(id: number): Promise<Pokemon|null> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => this.isEmpty(data) ? null : data)\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\r\n    }); \r\n  }\r\n  \r\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      const { id } = pokemon;\r\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\r\n      this.pokemons[index] = pokemon;\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const { id } = pokemon;\r\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\r\n      resolve({});\r\n    }); \r\n  }\r\n  \r\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    pokemon.created = new Date(pokemon.created);\r\n  \r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      this.pokemons.push(pokemon);\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static searchPokemon(term: string): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\r\n      resolve(results);\r\n    });\r\n  \r\n  }\r\n  \r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n  \r\n  static handleError(error: Error): void {\r\n    console.error(error);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
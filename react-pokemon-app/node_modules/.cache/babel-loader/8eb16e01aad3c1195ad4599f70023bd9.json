{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\tuto_react\\\\react-pokemon-app\\\\src\\\\App.tsx\";\n//import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport POKEMONS from './models/mock-pokemon';\n\nconst App = () => {\n  /* le hook permettant de rajouter le state à un composant de fonction\r\n  (stateless component) est useState */\n  //const name: String = 'React';\n  //const [name, setName] = useState<String>('React'); // les <> servent à typer le retour afin de s'assurer qu'on reçoit la bonne donnée\n  const [pokemons, setPokemons] = useState([]);\n  useEffect(() => setPokemons({\n    POKEMONS\n  }));\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"il y a  \", pokemons.length, \" de pokemon !\");\n};\n\nexport default App;\n/*\r\n  export default class App extends React.Component{\r\n    const name: String = 'React';\r\n    \r\n    render(){\r\n    return <h1>Hello, {name} !</h1>;\r\n    }\r\n  }\r\n  */","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/tuto_react/react-pokemon-app/src/App.tsx"],"names":["React","useState","useEffect","POKEMONS","App","pokemons","setPokemons","length"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAkCC,QAAlC,EAA4CC,SAA5C,QAA4D,OAA5D;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAGA,MAAMC,GAAoC,GAAG,MAAM;AAC/C;;AAEH;AACA;AACE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAY,EAAZ,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAMI,WAAW,CAAC;AAACH,IAAAA;AAAD,GAAD,CAAlB,CAAT;AAEF,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaE,QAAQ,CAACE,MAAtB,kBADD;AAGA,CAXD;;AAaA,eAAeH,GAAf;AAEA","sourcesContent":["//import React from 'react';\r\nimport React, {FunctionComponent, useState, useEffect} from 'react';\r\nimport POKEMONS from './models/mock-pokemon';\r\nimport Pokemon from './models/pokemon';\r\n\r\nconst App: /*React.FC */ FunctionComponent = () => {\r\n    /* le hook permettant de rajouter le state à un composant de fonction\r\n    (stateless component) est useState */\r\n //const name: String = 'React';\r\n //const [name, setName] = useState<String>('React'); // les <> servent à typer le retour afin de s'assurer qu'on reçoit la bonne donnée\r\n   const [pokemons, setPokemons] = useState<Pokemon[]>([]);  \r\n   useEffect(() => setPokemons({POKEMONS})\r\n   );\r\n return (\r\n  <h1>il y a  {pokemons.length} de pokemon !</h1>\r\n )\r\n}\r\n\r\nexport default App; \r\n\r\n/*\r\n  export default class App extends React.Component{\r\n    const name: String = 'React';\r\n    \r\n    render(){\r\n    return <h1>Hello, {name} !</h1>;\r\n    }\r\n  }\r\n  */"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\tuto_react\\\\react-pokemon-app\\\\src\\\\components\\\\pokemon-form.tsx\";\nimport React, { useState } from 'react';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\nimport PokemonService from '../services/pokemon-services';\n\nconst PokemonForm = ({\n  pokemon\n}) => {\n  const [form, setForm] = useState({\n    name: {\n      value: pokemon.name,\n      isValid: true\n    },\n    hp: {\n      value: pokemon.hp,\n      isValid: true\n    },\n    cp: {\n      value: pokemon.cp,\n      isValid: true\n    },\n    types: {\n      value: pokemon.types,\n      isValid: true\n    }\n  });\n  const history = useHistory();\n  const types = ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n\n  const hasType = type => {\n    return form.types.value.includes(type);\n  };\n\n  const handleInputChange = e => {\n    const fieldName = e.target.name; // retrive the name of the object -> nom du champ\n\n    const fieldValue = e.target.value; // retrieve the value of the object -> nouvelle valeur du champ\n\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    }; // on regroupe ses valeurs dans un nouvel objet\n\n    setForm({ ...form,\n      ...newField\n    });\n  };\n\n  const selectType = (type, e) => {\n    const checked = e.target.checked;\n    let newField; // si user coche un type, on l'ajoute à la liste des types du pokemon\n\n    if (checked) {\n      const newTypes = form.types.value.concat([type]);\n      newField = {\n        value: newTypes\n      };\n    } else {\n      // si user décoche une case, on le retire de la liste. \n      const newTypes = form.types.value.filter(currentType => currentType !== type);\n      newField = {\n        value: newTypes\n      };\n    }\n\n    setForm({ ...form,\n      ...{\n        types: newField\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n\n    if (isFormValid) {\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n      PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n    }\n  };\n\n  const validateForm = () => {\n    let newForm = form; // validator name\n\n    if (!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg = 'Le nom du pokémon est requis.';\n      const newField = {\n        value: form.name.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.name.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          name: newField\n        }\n      };\n    }\n\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField = {\n        value: form.hp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.hp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          hp: newField\n        }\n      };\n    }\n\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg = 'Les dégats du pokémons sont compris entre 0 et 99.';\n      const newField = {\n        value: form.cp.value,\n        error: errorMsg,\n        isValid: false\n      };\n      newForm = { ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    } else {\n      const newField = {\n        value: form.cp.value,\n        error: '',\n        isValid: true\n      };\n      newForm = { ...newForm,\n        ...{\n          cp: newField\n        }\n      };\n    }\n\n    setForm(newForm); // return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n\n    return (newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid) === true ? true : false;\n  };\n\n  const isTypesValid = type => {\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n\n    if (form.types.value.length >= 3 && !hasType(type)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n  };\n\n  const addPokemon = () => {\n    PokemonService.addPokemon(pokemon).then(() => history.push(`/pokemons`));\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col s12 m8 offset-m2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card hoverable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: pokemon.picture,\n    alt: pokemon.name,\n    style: {\n      width: '250px',\n      margin: '0 auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"btn-floating halfway-fab waves-effect waves-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    onClick: deletePokemon,\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"delete\"))), React.createElement(\"div\", {\n    className: \"card-stacked\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Nom\"), React.createElement(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    className: \"form-control\",\n    value: form.name.value,\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), form.name.error && React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, form.name.error)), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"hp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Point de vie\"), React.createElement(\"input\", {\n    id: \"hp\",\n    name: \"hp\",\n    type: \"number\",\n    className: \"form-control\",\n    value: form.hp.value,\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), form.hp.error && React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, form.hp.error)), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"cp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"D\\xE9g\\xE2ts\"), React.createElement(\"input\", {\n    id: \"cp\",\n    name: \"cp\",\n    type: \"number\",\n    className: \"form-control\",\n    value: form.cp.value,\n    onChange: e => handleInputChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), form.cp.error && React.createElement(\"div\", {\n    className: \"card-panel red accent-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, form.cp.error)), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Types\"), types.map(type => React.createElement(\"div\", {\n    key: type,\n    style: {\n      marginBottom: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: type,\n    type: \"checkbox\",\n    className: \"filled-in\",\n    value: type,\n    checked: hasType(type),\n    onChange: e => selectType(type, e),\n    disabled: !isTypesValid(type),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: formatType(type),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, type))))))), React.createElement(\"div\", {\n    className: \"card-action center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Valider\")))))));\n};\n\nexport default PokemonForm;","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/tuto_react/react-pokemon-app/src/components/pokemon-form.tsx"],"names":["React","useState","formatType","useHistory","PokemonService","PokemonForm","pokemon","form","setForm","name","value","isValid","hp","cp","types","history","hasType","type","includes","handleInputChange","e","fieldName","target","fieldValue","newField","selectType","checked","newTypes","concat","filter","currentType","handleSubmit","preventDefault","isFormValid","validateForm","updatePokemon","then","push","id","newForm","test","errorMsg","error","isTypesValid","length","deletePokemon","addPokemon","picture","width","margin","map","marginBottom"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatType from '../helpers/format-type';\r\nimport{useHistory} from 'react-router-dom';\r\nimport PokemonService from '../services/pokemon-services';\r\n  \r\ntype Props = {\r\n  pokemon: Pokemon\r\n};\r\n\r\n  type Field = {\r\n    value?: any, \r\n    error?:string, \r\n    isValid?: boolean\r\n  }\r\n\r\n  type Form = {\r\n    name: Field,\r\n    hp: Field,\r\n    cp: Field,\r\n    types: Field\r\n}\r\n  \r\nconst PokemonForm: FunctionComponent<Props> = ( {pokemon} ) => {\r\n  \r\n  const [form, setForm ] = useState<Form>({\r\n    name: {value: pokemon.name, isValid: true}, \r\n    hp : {value: pokemon.hp, isValid: true},\r\n    cp : {value: pokemon.cp, isValid: true},\r\n    types : {value: pokemon.types, isValid: true}\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const types: string[] = [\r\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\r\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\r\n  ];\r\n  \r\n  const hasType = (type: string) : boolean => {\r\n        return form.types.value.includes(type);\r\n  }\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const fieldName: string = e.target.name; // retrive the name of the object -> nom du champ\r\n      const fieldValue: string = e.target.value; // retrieve the value of the object -> nouvelle valeur du champ\r\n\r\n      const newField: Field = {[fieldName]:  {value: fieldValue}};\r\n      // on regroupe ses valeurs dans un nouvel objet\r\n\r\n      setForm({...form, ...newField});\r\n  }\r\n\r\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>):void => {\r\n      const checked = e.target.checked;\r\n      let newField: Field; \r\n\r\n      // si user coche un type, on l'ajoute à la liste des types du pokemon\r\n      if(checked){\r\n            const newTypes: string[] = form.types.value.concat([type]);\r\n            newField = {value: newTypes};\r\n      } else {\r\n        // si user décoche une case, on le retire de la liste. \r\n        const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\r\n        newField = {value: newTypes};\r\n      }\r\n\r\n      setForm({...form, ...{types: newField}});\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if(isFormValid){\r\n      pokemon.name = form.name.value; \r\n      pokemon.hp = form.hp.value;\r\n      pokemon.cp = form.cp.value;\r\n      pokemon.types = form.types.value;\r\n      PokemonService.updatePokemon(pokemon)\r\n      .then(() => history.push(`/pokemons/${pokemon.id}`));\r\n      \r\n   }\r\n  }\r\n \r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n   // validator name\r\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)){\r\n      const errorMsg: string = 'Le nom du pokémon est requis.';\r\n      const newField: Field = {value: form.name.value, error: errorMsg, isValid: false};\r\n      newForm = {...newForm, ...{name: newField}};\r\n    } else {\r\n      const newField: Field = {value: form.name.value, error: '', isValid: true};\r\n      newForm = {...newForm, ...{name: newField}};\r\n    }\r\n\r\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)){\r\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\r\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\r\n      newForm = {...newForm, ...{hp: newField}};\r\n    } else {\r\n      const newField: Field = {value: form.hp.value, error: '', isValid: true};\r\n      newForm = {...newForm, ...{hp: newField}};\r\n    }\r\n\r\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)){\r\n      const errorMsg: string = 'Les dégats du pokémons sont compris entre 0 et 99.';\r\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\r\n      newForm = {...newForm, ...{cp: newField}};\r\n    } else {\r\n      const newField: Field = {value: form.cp.value, error: '', isValid: true};\r\n      newForm = {...newForm, ...{cp: newField}};\r\n    }\r\n\r\n    setForm(newForm);\r\n\r\n   // return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n    return ((newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid) === true)?true:false; \r\n  }\r\n\r\n  const isTypesValid = (type: string):boolean => {\r\n      if(form.types.value.length === 1 && hasType(type)){\r\n          return false; \r\n      }\r\n      if(form.types.value.length >= 3 && !hasType(type)){\r\n        return false;\r\n      }\r\n      return true;\r\n  }\r\n\r\n  const deletePokemon = () =>  {\r\n    PokemonService.deletePokemon(pokemon)\r\n    .then(() => history.push(`/pokemons`));\r\n  }\r\n\r\n  const addPokemon = () => {\r\n    PokemonService.addPokemon(pokemon)\r\n    .then(() => history.push(`/pokemons`));\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\"> \r\n            <div className=\"card-image\">\r\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n              <span className=\"btn-floating halfway-fab waves-effect waves-light\">\r\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\r\n              </span>\r\n            </div>\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Pokemon name */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.name.error &&\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.name.error}\r\n                    </div>\r\n                  }\r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value}  onChange={e => handleInputChange(e)}></input>\r\n                  {form.hp.error &&\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.hp.error}\r\n                    </div>\r\n                  }\r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value}  onChange={e => handleInputChange(e)}></input>\r\n                  {form.cp.error &&\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.cp.error}\r\n                    </div>\r\n                  }\r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n\r\n                  {types.map(type => (\r\n                    <div key={type} style={{marginBottom: '10px'}}>\r\n                      <label>\r\n\r\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} checked={hasType(type)} onChange={e => selectType(type, e)} disabled={!isTypesValid(type)}></input>\r\n                        \r\n                        <span>\r\n                          <p className={formatType(type)}>{ type }</p>\r\n                        </span>\r\n\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n   \r\nexport default PokemonForm;"]},"metadata":{},"sourceType":"module"}
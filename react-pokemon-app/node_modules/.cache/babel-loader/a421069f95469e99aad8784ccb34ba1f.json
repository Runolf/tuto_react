{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\tuto_react\\\\react-pokemon-app\\\\src\\\\App.tsx\";\n//import React from 'react';\nimport React, { useState, useEffect } from 'react';\nimport POKEMONS from './models/mock-pokemon';\n\nconst App = () => {\n  /* le hook permettant de rajouter le state à un composant de fonction\r\n  (stateless component) est useState */\n  //const name: String = 'React';\n  //const [name, setName] = useState<String>('React'); // les <> servent à typer le retour afin de s'assurer qu'on reçoit la bonne donnée\n  const [pokemons, setPokemons] = useState([]);\n  useEffect(() => {\n    setPokemons(POKEMONS);\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Pokedex\"), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, pokemons.map(({\n    id,\n    name,\n    picture,\n    created\n  }) => React.createElement(\"div\", {\n    className: \"col s6 m4\",\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card horizontal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: picture,\n    alt: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))))))));\n};\n\nexport default App;\n/*\r\n  export default class App extends React.Component{\r\n    const name: String = 'React';\r\n    \r\n    render(){\r\n    return <h1>Hello, {name} !</h1>;\r\n    }\r\n  }\r\n  */","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/tuto_react/react-pokemon-app/src/App.tsx"],"names":["React","useState","useEffect","POKEMONS","App","pokemons","setPokemons","map","id","name","picture","created"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAkCC,QAAlC,EAA4CC,SAA5C,QAA4D,OAA5D;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAGA,MAAMC,GAAoC,GAAG,MAAM;AAC/C;;AAGA;AACA;AAEF,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAY,EAAZ,CAAxC;AACCC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW,CAACH,QAAD,CAAX;AACA,GAFO,EAEL,EAFK,CAAT;AAKF,SAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,QAAQ,CAACE,GAAT,CAAa,CAAC;AAACC,IAAAA,EAAD;AAAKC,IAAAA,IAAL;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,GAAD,KACV;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEH,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEE,OAAV;AAAmB,IAAA,GAAG,EAAED,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADF,CADH,CADH,CADF,CAFF,CAFD;AAsBA,CAnCD;;AAqCA,eAAeL,GAAf;AAEA","sourcesContent":["//import React from 'react';\r\nimport React, {FunctionComponent, useState, useEffect} from 'react';\r\nimport POKEMONS from './models/mock-pokemon';\r\nimport Pokemon from './models/pokemon';\r\n\r\nconst App: /*React.FC */ FunctionComponent = () => {\r\n    /* le hook permettant de rajouter le state à un composant de fonction\r\n    (stateless component) est useState */\r\n \r\n    //const name: String = 'React';\r\n    //const [name, setName] = useState<String>('React'); // les <> servent à typer le retour afin de s'assurer qu'on reçoit la bonne donnée\r\n  \r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);  \r\n   useEffect(() => {\r\n     setPokemons(POKEMONS);\r\n    }, []);\r\n\r\n\r\n return (\r\n  \r\n  <div>\r\n    <h1 className=\"center\">Pokedex</h1>\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        {pokemons.map(({id, name, picture, created}) => (\r\n            <div className=\"col s6 m4\" key={id}>\r\n              <div className=\"card horizontal\">\r\n                  <div className=\"card image\">\r\n                      <img src={picture} alt={name}/>\r\n                  </div>\r\n\r\n\r\n              </div>\r\n            </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  </div>\r\n \r\n )\r\n}\r\n\r\nexport default App; \r\n\r\n/*\r\n  export default class App extends React.Component{\r\n    const name: String = 'React';\r\n    \r\n    render(){\r\n    return <h1>Hello, {name} !</h1>;\r\n    }\r\n  }\r\n  */\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\tuto_react\\\\react-pokemon-app\\\\src\\\\App.tsx\";\n//import React from 'react';\nimport React from 'react';\n\nconst App = () => {\n  /* le hook permettant de rajouter le state à un composant de fonction\r\n  (stateless component) est useState */\n  //const name: String = 'React';\n  //const [name, setName] = useState<String>('React'); // les <> servent à typer le retour afin de s'assurer qu'on reçoit la bonne donnée\n\n  /*\r\n  // plus besoin du state et des effets car on passe par la prop pokemon-list\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);  \r\n  useEffect(() => {\r\n   setPokemons(POKEMONS);\r\n  }, []);\r\n  */\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Pokedex\"), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, pokemons.map(({\n    id,\n    name,\n    picture,\n    created,\n    hp,\n    cp,\n    types\n  }) => React.createElement(\"div\", {\n    className: \"col s6 m4\",\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card horizontal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: picture,\n    alt: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"card-stacked\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"hp: \", hp), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"cp: \", cp), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, created.getFullYear())), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"types: \"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, types.map(t => React.createElement(\"p\", {\n    key: t,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, t)))))))))));\n};\n\nexport default App;\n/*\r\n  export default class App extends React.Component{\r\n    const name: String = 'React';\r\n    \r\n    render(){\r\n    return <h1>Hello, {name} !</h1>;\r\n    }\r\n  }\r\n  */","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/tuto_react/react-pokemon-app/src/App.tsx"],"names":["React","App","pokemons","map","id","name","picture","created","hp","cp","types","getFullYear","t"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAA4D,OAA5D;;AAIA,MAAMC,GAAoC,GAAG,MAAM;AAC/C;;AAGA;AACA;;AAEA;;;;;;;AAQH,SAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QAAQ,CAACC,GAAT,CAAa,CAAC;AAACC,IAAAA,EAAD;AAAKC,IAAAA,IAAL;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,EAA7B;AAAiCC,IAAAA,EAAjC;AAAqCC,IAAAA;AAArC,GAAD,KACV;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEN,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEE,OAAV;AAAmB,IAAA,GAAG,EAAED,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAKA;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAJ,CADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQG,EAAR,CAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAQC,EAAR,CAHH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQF,OAAO,CAACI,WAAR,EAAR,CAAH,CAJH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALH,EAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,KAAK,CAACP,GAAN,CACFS,CAAD,IAAQ;AAAG,IAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYA,CAAZ,CADL,CAAN,CANH,CADF,CALA,CADF,CADH,CADH,CADF,CAFF,CAFD;AAiCA,CAhDD;;AAkDA,eAAeX,GAAf;AAEA","sourcesContent":["//import React from 'react';\r\nimport React, {FunctionComponent, useState, useEffect} from 'react';\r\nimport POKEMONS from './models/mock-pokemon';\r\nimport Pokemon from './models/pokemon';\r\n\r\nconst App: /*React.FC */ FunctionComponent = () => {\r\n    /* le hook permettant de rajouter le state à un composant de fonction\r\n    (stateless component) est useState */\r\n \r\n    //const name: String = 'React';\r\n    //const [name, setName] = useState<String>('React'); // les <> servent à typer le retour afin de s'assurer qu'on reçoit la bonne donnée\r\n  \r\n    /*\r\n    // plus besoin du state et des effets car on passe par la prop pokemon-list\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);  \r\n   useEffect(() => {\r\n     setPokemons(POKEMONS);\r\n    }, []);\r\n  */\r\n\r\n return (\r\n  \r\n  <div>\r\n    <h1 className=\"center\">Pokedex</h1>\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        {pokemons.map(({id, name, picture, created, hp, cp, types}) => (\r\n            <div className=\"col s6 m4\" key={id}>\r\n              <div className=\"card horizontal\">\r\n                  <div className=\"card image\">\r\n                      <img src={picture} alt={name}/>\r\n                  </div>\r\n\r\n              <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                   <p>{name}</p>\r\n                   <p>hp: {hp}</p>\r\n                   <p>cp: {cp}</p>\r\n                   <p><small>{created.getFullYear()}</small></p>\r\n                   <p>types: </p>\r\n                   <div>{types.map(\r\n                      (t) => (<p key={t}>{t}</p>)\r\n                   )}</div>\r\n                </div>\r\n              </div>\r\n              </div>\r\n            </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  </div>\r\n \r\n )\r\n}\r\n\r\nexport default App; \r\n\r\n/*\r\n  export default class App extends React.Component{\r\n    const name: String = 'React';\r\n    \r\n    render(){\r\n    return <h1>Hello, {name} !</h1>;\r\n    }\r\n  }\r\n  */\r\n"]},"metadata":{},"sourceType":"module"}
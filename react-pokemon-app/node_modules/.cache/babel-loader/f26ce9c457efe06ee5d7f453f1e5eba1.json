{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\tuto_react\\\\react-pokemon-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\tuto_react\\\\react-pokemon-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:\\\\Users\\\\stagiaire02\\\\source\\\\repos\\\\tuto_react\\\\react-pokemon-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import formatType from'../helpers/format-type';import{useHistory}from'react-router-dom';import PokemonService from'../services/pokemon-services';var PokemonForm=function PokemonForm(_ref){var pokemon=_ref.pokemon,isEditForm=_ref.isEditForm;var _useState=useState({picture:{value:pokemon.picture},name:{value:pokemon.name,isValid:true},hp:{value:pokemon.hp,isValid:true},cp:{value:pokemon.cp,isValid:true},types:{value:pokemon.types,isValid:true}}),_useState2=_slicedToArray(_useState,2),form=_useState2[0],setForm=_useState2[1];var history=useHistory();var types=['Plante','Feu','Eau','Insecte','Normal','Electrik','Poison','Fée','Vol','Combat','Psy'];var hasType=function hasType(type){return form.types.value.includes(type);};var handleInputChange=function handleInputChange(e){var fieldName=e.target.name;// retrive the name of the object -> nom du champ\nvar fieldValue=e.target.value;// retrieve the value of the object -> nouvelle valeur du champ\nvar newField=_defineProperty({},fieldName,{value:fieldValue});// on regroupe ses valeurs dans un nouvel objet\nsetForm(_objectSpread({},form,{},newField));};var selectType=function selectType(type,e){var checked=e.target.checked;var newField;// si user coche un type, on l'ajoute à la liste des types du pokemon\nif(checked){var newTypes=form.types.value.concat([type]);newField={value:newTypes};}else{// si user décoche une case, on le retire de la liste. \nvar _newTypes=form.types.value.filter(function(currentType){return currentType!==type;});newField={value:_newTypes};}setForm(_objectSpread({},form,{},{types:newField}));};var handleSubmit=function handleSubmit(e){e.preventDefault();var isFormValid=validateForm();if(isFormValid){pokemon.picture=form.picture.value;pokemon.name=form.name.value;pokemon.hp=form.hp.value;pokemon.cp=form.cp.value;pokemon.types=form.types.value;isEditForm?updatePokemon():addPokemon();}};var isAddForm=function isAddForm(){return!isEditForm;};var validateForm=function validateForm(){var newForm=form;// validator url image\nif(isAddForm()){var start=\"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";var end=\".png\";if(!form.picture.value.startsWith(start)||!form.picture.value.endsWith(end)){var errorMsg=\"l'url n est pas valide!\";var newField={value:form.picture.value,error:errorMsg,isValid:false};newForm=_objectSpread({},form,{},{picture:newField});}else{var _newField2={value:form.picture.value,error:'',isValid:true};newForm=_objectSpread({},form,{},{picture:_newField2});}}// validator name\nif(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)){var _errorMsg='Le nom du pokémon est requis.';var _newField3={value:form.name.value,error:_errorMsg,isValid:false};newForm=_objectSpread({},newForm,{},{name:_newField3});}else{var _newField4={value:form.name.value,error:'',isValid:true};newForm=_objectSpread({},newForm,{},{name:_newField4});}if(!/^[0-9]{1,3}$/.test(form.hp.value)){var _errorMsg2='Les points de vie du pokémon sont compris entre 0 et 999.';var _newField5={value:form.hp.value,error:_errorMsg2,isValid:false};newForm=_objectSpread({},newForm,{},{hp:_newField5});}else{var _newField6={value:form.hp.value,error:'',isValid:true};newForm=_objectSpread({},newForm,{},{hp:_newField6});}if(!/^[0-9]{1,2}$/.test(form.cp.value)){var _errorMsg3='Les dégats du pokémons sont compris entre 0 et 99.';var _newField7={value:form.cp.value,error:_errorMsg3,isValid:false};newForm=_objectSpread({},newForm,{},{cp:_newField7});}else{var _newField8={value:form.cp.value,error:'',isValid:true};newForm=_objectSpread({},newForm,{},{cp:_newField8});}setForm(newForm);// return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\nreturn(newForm.name.isValid&&newForm.hp.isValid&&newForm.cp.isValid)===true?true:false;};var isTypesValid=function isTypesValid(type){if(form.types.value.length===1&&hasType(type)){return false;}if(form.types.value.length>=3&&!hasType(type)){return false;}return true;};var deletePokemon=function deletePokemon(){PokemonService.deletePokemon(pokemon).then(function(){return history.push(\"/pokemons\");});};var addPokemon=function addPokemon(){PokemonService.addPokemon(pokemon).then(function(){return history.push(\"/pokemons\");});};var updatePokemon=function updatePokemon(){PokemonService.updatePokemon(pokemon).then(function(){return history.push(\"/pokemons/\".concat(pokemon.id));});};return React.createElement(\"form\",{onSubmit:function onSubmit(e){return handleSubmit(e);}},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col s12 m8 offset-m2\"},React.createElement(\"div\",{className:\"card hoverable\"},isEditForm&&React.createElement(\"div\",{className:\"card-image\"},React.createElement(\"img\",{src:pokemon.picture,alt:pokemon.name,style:{width:'250px',margin:'0 auto'}}),React.createElement(\"span\",{className:\"btn-floating halfway-fab waves-effect waves-light\"},React.createElement(\"i\",{onClick:deletePokemon,className:\"material-icons\"},\"delete\"))),React.createElement(\"div\",{className:\"card-stacked\"},React.createElement(\"div\",{className:\"card-content\"},isAddForm&&/* Pokemon picture */React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"picture\"},\"Image\"),React.createElement(\"input\",{id:\"picture\",name:\"picture\",type:\"text\",className:\"form-control\",value:form.picture.value,onChange:function onChange(e){return handleInputChange(e);}}),form.picture.error&&React.createElement(\"div\",{className:\"card-panel red accent-1\"},form.picture.error)),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"name\"},\"Nom\"),React.createElement(\"input\",{id:\"name\",name:\"name\",type:\"text\",className:\"form-control\",value:form.name.value,onChange:function onChange(e){return handleInputChange(e);}}),form.name.error&&React.createElement(\"div\",{className:\"card-panel red accent-1\"},form.name.error)),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"hp\"},\"Point de vie\"),React.createElement(\"input\",{id:\"hp\",name:\"hp\",type:\"number\",className:\"form-control\",value:form.hp.value,onChange:function onChange(e){return handleInputChange(e);}}),form.hp.error&&React.createElement(\"div\",{className:\"card-panel red accent-1\"},form.hp.error)),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",{htmlFor:\"cp\"},\"D\\xE9g\\xE2ts\"),React.createElement(\"input\",{id:\"cp\",name:\"cp\",type:\"number\",className:\"form-control\",value:form.cp.value,onChange:function onChange(e){return handleInputChange(e);}}),form.cp.error&&React.createElement(\"div\",{className:\"card-panel red accent-1\"},form.cp.error)),React.createElement(\"div\",{className:\"form-group\"},React.createElement(\"label\",null,\"Types\"),types.map(function(type){return React.createElement(\"div\",{key:type,style:{marginBottom:'10px'}},React.createElement(\"label\",null,React.createElement(\"input\",{id:type,type:\"checkbox\",className:\"filled-in\",value:type,checked:hasType(type),onChange:function onChange(e){return selectType(type,e);},disabled:!isTypesValid(type)}),React.createElement(\"span\",null,React.createElement(\"p\",{className:formatType(type)},type))));}))),React.createElement(\"div\",{className:\"card-action center\"},React.createElement(\"button\",{type:\"submit\",className:\"btn\"},\"Valider\")))))));};export default PokemonForm;","map":{"version":3,"sources":["C:/Users/stagiaire02/source/repos/tuto_react/react-pokemon-app/src/components/pokemon-form.tsx"],"names":["React","useState","formatType","useHistory","PokemonService","PokemonForm","pokemon","isEditForm","picture","value","name","isValid","hp","cp","types","form","setForm","history","hasType","type","includes","handleInputChange","e","fieldName","target","fieldValue","newField","selectType","checked","newTypes","concat","filter","currentType","handleSubmit","preventDefault","isFormValid","validateForm","updatePokemon","addPokemon","isAddForm","newForm","start","end","startsWith","endsWith","errorMsg","error","test","isTypesValid","length","deletePokemon","then","push","id","width","margin","map","marginBottom"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatType from '../helpers/format-type';\r\nimport{useHistory} from 'react-router-dom';\r\nimport PokemonService from '../services/pokemon-services';\r\n  \r\ntype Props = {\r\n  pokemon: Pokemon,\r\n  isEditForm: boolean\r\n};\r\n\r\n  type Field = {\r\n    value?: any, \r\n    error?:string, \r\n    isValid?: boolean\r\n  }\r\n\r\n  type Form = {\r\n    picture: Field,\r\n    name: Field,\r\n    hp: Field,\r\n    cp: Field,\r\n    types: Field\r\n}\r\n  \r\nconst PokemonForm: FunctionComponent<Props> = ( {pokemon, isEditForm} ) => {\r\n  \r\n  const [form, setForm ] = useState<Form>({\r\n    picture: {value: pokemon.picture },\r\n    name: {value: pokemon.name, isValid: true}, \r\n    hp : {value: pokemon.hp, isValid: true},\r\n    cp : {value: pokemon.cp, isValid: true},\r\n    types : {value: pokemon.types, isValid: true}\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const types: string[] = [\r\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\r\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\r\n  ];\r\n  \r\n  const hasType = (type: string) : boolean => {\r\n        return form.types.value.includes(type);\r\n  }\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const fieldName: string = e.target.name; // retrive the name of the object -> nom du champ\r\n      const fieldValue: string = e.target.value; // retrieve the value of the object -> nouvelle valeur du champ\r\n\r\n      const newField: Field = {[fieldName]:  {value: fieldValue}};\r\n      // on regroupe ses valeurs dans un nouvel objet\r\n\r\n      setForm({...form, ...newField});\r\n  }\r\n\r\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>):void => {\r\n      const checked = e.target.checked;\r\n      let newField: Field; \r\n\r\n      // si user coche un type, on l'ajoute à la liste des types du pokemon\r\n      if(checked){\r\n            const newTypes: string[] = form.types.value.concat([type]);\r\n            newField = {value: newTypes};\r\n      } else {\r\n        // si user décoche une case, on le retire de la liste. \r\n        const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\r\n        newField = {value: newTypes};\r\n      }\r\n\r\n      setForm({...form, ...{types: newField}});\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if(isFormValid){\r\n      pokemon.picture = form.picture.value;\r\n      pokemon.name = form.name.value; \r\n      pokemon.hp = form.hp.value;\r\n      pokemon.cp = form.cp.value;\r\n      pokemon.types = form.types.value;\r\n      isEditForm?updatePokemon():addPokemon();\r\n   }\r\n  }\r\n \r\n  const isAddForm = () => {\r\n    return !isEditForm;\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // validator url image\r\n    if(isAddForm()){\r\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\r\n      const end = \".png\";\r\n\r\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)){\r\n          const errorMsg: string = \"l'url n est pas valide!\";\r\n          const newField: Field = {value : form.picture.value, error: errorMsg, isValid: false};\r\n          newForm = {...form, ...{picture: newField}};\r\n      } else {\r\n          const newField: Field = {value : form.picture.value, error:'', isValid: true};\r\n          newForm = {...form, ...{picture: newField}};\r\n      }\r\n\r\n    }\r\n\r\n   // validator name\r\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)){\r\n      const errorMsg: string = 'Le nom du pokémon est requis.';\r\n      const newField: Field = {value: form.name.value, error: errorMsg, isValid: false};\r\n      newForm = {...newForm, ...{name: newField}};\r\n    } else {\r\n      const newField: Field = {value: form.name.value, error: '', isValid: true};\r\n      newForm = {...newForm, ...{name: newField}};\r\n    }\r\n\r\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)){\r\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\r\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\r\n      newForm = {...newForm, ...{hp: newField}};\r\n    } else {\r\n      const newField: Field = {value: form.hp.value, error: '', isValid: true};\r\n      newForm = {...newForm, ...{hp: newField}};\r\n    }\r\n\r\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)){\r\n      const errorMsg: string = 'Les dégats du pokémons sont compris entre 0 et 99.';\r\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\r\n      newForm = {...newForm, ...{cp: newField}};\r\n    } else {\r\n      const newField: Field = {value: form.cp.value, error: '', isValid: true};\r\n      newForm = {...newForm, ...{cp: newField}};\r\n    }\r\n\r\n    setForm(newForm);\r\n\r\n   // return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n    return ((newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid) === true)?true:false; \r\n  }\r\n\r\n  const isTypesValid = (type: string):boolean => {\r\n      if(form.types.value.length === 1 && hasType(type)){\r\n          return false; \r\n      }\r\n      if(form.types.value.length >= 3 && !hasType(type)){\r\n        return false;\r\n      }\r\n      return true;\r\n  }\r\n\r\n  const deletePokemon = () =>  {\r\n    PokemonService.deletePokemon(pokemon)\r\n    .then(() => history.push(`/pokemons`));\r\n  }\r\n\r\n  const addPokemon = () => {\r\n    PokemonService.addPokemon(pokemon)\r\n    .then(() => history.push(`/pokemons`));\r\n  }\r\n\r\n  const updatePokemon = () => {\r\n    PokemonService.updatePokemon(pokemon)\r\n      .then(() => history.push(`/pokemons/${pokemon.id}`));\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\"> \r\n            {isEditForm && (\r\n              <div className=\"card-image\">\r\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n                <span className=\"btn-floating halfway-fab waves-effect waves-light\">\r\n                  <i onClick={deletePokemon} className=\"material-icons\">delete</i>\r\n               </span>\r\n              </div>\r\n            )}\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n\r\n                {isAddForm && (\r\n                  /* Pokemon picture */\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"picture\">Image</label>\r\n                    <input id=\"picture\" name=\"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\r\n                    {form.picture.error &&\r\n                      <div className=\"card-panel red accent-1\">\r\n                        {form.picture.error}\r\n                      </div>\r\n                    }\r\n                </div>\r\n               )}\r\n\r\n                {/* Pokemon name */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.name.error &&\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.name.error}\r\n                    </div>\r\n                  }\r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value}  onChange={e => handleInputChange(e)}></input>\r\n                  {form.hp.error &&\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.hp.error}\r\n                    </div>\r\n                  }\r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value}  onChange={e => handleInputChange(e)}></input>\r\n                  {form.cp.error &&\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.cp.error}\r\n                    </div>\r\n                  }\r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n\r\n                  {types.map(type => (\r\n                    <div key={type} style={{marginBottom: '10px'}}>\r\n                      <label>\r\n\r\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} checked={hasType(type)} onChange={e => selectType(type, e)} disabled={!isTypesValid(type)}></input>\r\n                        \r\n                        <span>\r\n                          <p className={formatType(type)}>{ type }</p>\r\n                        </span>\r\n\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n   \r\nexport default PokemonForm;"]},"metadata":{},"sourceType":"module"}